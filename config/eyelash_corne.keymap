#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        comma_semicolon: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;

            mods = <(MOD_LSFT)>;
        };

        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp LS(SEMI)>;

            mods = <(MOD_LSFT)>;
        };

        excl_quest: excl_quest {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(FSLH)>, <&kp LS(N1)>;

            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_cut {
            timeout-ms = <50>;
            key-positions = <30 32>;
            bindings = <&kp LG(X)>;
        };

        combo_copy {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp LG(C)>;
        };

        combo_paste {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp LG(V)>;
        };

        combo_undo {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp LG(Z)>;
        };

        combo_redo {
            bindings = <&kp LS(LG(Z))>;
            key-positions = <2 3>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };

        combo_delete {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp DEL>;
        };

        combo_escape {
            timeout-ms = <50>;
            key-positions = <8 10>;
            bindings = <&kp ESC>;
        };

        combo_enter {
            timeout-ms = <50>;
            key-positions = <37 38>;
            bindings = <&kp ENTER>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&kp TAB>;
        };

        combo_cmd_enter {
            bindings = <&kp LG(ENTER)>;
            key-positions = <37 39>;
        };

        cmd_palette {
            bindings = <&kp LS(LG(P))>;
            key-positions = <17 23>;
        };

        combo_escape_2 {
            bindings = <&kp ESCAPE>;
            key-positions = <31 38>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        clear_line: clear_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&kp K>,
                <&macro_tap>,
                <&kp ENTER>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_release>,
                <&kp LSHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLMAK";
            bindings = <
&kp ESCAPE         &kp Q        &kp W       &kp F                           &kp P         &kp B                                      &kp UP                &kp J            &kp L           &kp U             &kp Y       &kp SINGLE_QUOTE  &kp GRAVE
&kp LA(LS(SLASH))  &hm LCTRL A  &hm LALT R  &hm LGUI S                      &hm LSHIFT T  &kp G                            &kp LEFT  &kp ENTER  &kp RIGHT  &kp M            &hm LSHIFT N    &hm LGUI E        &hm LALT I  &hm LCTRL O       &kp MINUS
&kp LA(LS(SPACE))  &kp Z        &kp X       &kp C                           &kp D         &kp V        &kp K_PLAY_PAUSE              &kp DOWN              &kp K            &kp H           &comma_semicolon  &dot_colon  &excl_quest       &mt SLASH EQUAL
                                            &sk LS(LA(LC(LG(LEFT_SHIFT))))  &sl 2         &lt 1 SPACE                                                      &lt 3 BACKSPACE  &sk LEFT_SHIFT  &sl 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_num {
            display-name = "NUMBER";
            bindings = <
&trans     &trans    &trans     &trans    &trans     &trans                                     &mmv MOVE_UP                     &trans      &kp N7  &kp N8  &kp N9  &kp COMMA   &trans
&kp SLASH  &kp STAR  &kp MINUS  &kp PLUS  &kp EQUAL  &kp PERCENT                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp DOLLAR  &kp N4  &kp N5  &kp N6  &kp N0      &trans
&trans     &trans    &trans     &trans    &kp CARET  &trans       &kp C_MUTE                    &mmv MOVE_DOWN                   &kp HASH    &kp N1  &kp N2  &kp N3  &kp PERIOD  &trans
                                &trans    &trans     &trans                                                                      &trans      &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_sym {
            display-name = "SYMBOL";
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans                                 &mmv MOVE_UP                     &kp AMPS    &kp PIPE               &kp BACKSLASH    &trans             &trans            &trans
&trans  &kp COLON  &kp SLASH  &kp ASTRK  &kp AT     &kp PERCENT            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp DOLLAR  &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LESS_THAN     &trans
&trans  &trans     &trans     &trans     &kp CARET  &trans       &trans                    &mmv MOVE_DOWN                   &kp HASH    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &trans
                              &trans     &trans     &trans                                                                  &trans      &trans                 &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_nav {
            display-name = "NAV";
            bindings = <
&trans  &trans  &trans         &kp LG(LS(ENTER))  &trans                 &trans                                &mmv MOVE_UP                     &trans    &kp LG(LEFT_ARROW)  &kp UP_ARROW  &kp LG(RIGHT)  &trans          &trans
&trans  &none   &kp LG(LS(K))  &clear_line        &kp LS(LG(LC(RIGHT)))  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp HOME  &kp LEFT            &kp DOWN      &kp RIGHT      &msc SCRL_UP    &kp PG_UP
&trans  &trans  &trans         &kp LG(ENTER)      &kp LS(LC(LG(LEFT)))   &trans  &kp K_MUTE                    &mmv MOVE_DOWN                   &kp END   &kp LA(LEFT)        &none         &kp LA(RIGHT)  &msc SCRL_DOWN  &kp PG_DN
                               &trans             &trans                 &trans                                                                 &trans    &trans              &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_fn {
            display-name = "FN";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_qwerty {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q        &kp W       &kp E       &kp R         &kp T                                 &kp UP                &kp Y   &kp U         &kp I       &kp O       &kp P           &kp BSPC
&td0       &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm LSHIFT F  &kp G                       &kp LEFT  &kp ENTER  &kp RIGHT  &kp H   &hm LSHIFT J  &hm LGUI K  &hm LALT L  &hm LCTRL SEMI  &kp SQT
&kp LCTRL  &kp Z        &kp X       &kp C       &kp V         &kp B   &kp C_PLAY_PAUSE              &kp DOWN              &kp N   &kp M         &kp COMMA   &kp DOT     &kp FSLH        &kp ESC
                                    &trans      &trans        &trans                                                      &trans  &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &mkp LCLK       &mkp MCLK       &mkp RCLK        &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans          &trans
            >;

            label = "MOUSE";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Mouse {
            if-layers = <1 3>;
            then-layer = <6>;
        };
    };
};
